<!-- This following code is responsible for rendering the HTML   -->
<!-- content on the page.  Here we use the information generated -->
<!-- in the above requests to display content that is personal   -->
<!-- to whomever views the page.  You would rewrite this content -->
<!-- with your own HTML content.  Be sure that you sanitize any  -->
<!-- content that you will be displaying to the user.  idx() by  -->
<!-- default will remove any html tags from the value being      -->
<!-- and echoEntity() will echo the sanitized content.  Both of  -->
<!-- these functions are located and documented in 'utils.php'.  -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">

    <!-- We get the name of the app out of the information fetched -->
    <title><%= app.name %></title>
    <link rel="stylesheet" href="stylesheets/screen.css" media="screen">

    <!-- These are Open Graph tags.  They add meta data to your  -->
    <!-- site that facebook uses when your content is shared     -->
    <!-- over facebook.  You should fill these tags in with      -->
    <!-- your data.  To learn more about Open Graph, visit       -->
    <!-- 'https://developers.facebook.com/docs/opengraph/'       -->
    <meta property="og:title" content=""/>
    <meta property="og:type" content=""/>
    <meta property="og:url" content=""/>
    <meta property="og:image" content=""/>
    <meta property="og:site_name" content=""/>
    <meta property="fb:app_id" content="<%= app.id %>"/>

    <script src="/scripts/jquery.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="http://staging.tokbox.com/v0.91/js/TB.min.js"></script>


    <script type="text/javascript">
    var chatMessageCounter=0;
	 var config = {};
	 	config.address = '#{<%= address %>}';
	 	config.port = '#{<%= port %>}';
    
    
        console.log("<%= socket_id %>")
    
    
    
    
      function popup(pageURL, title,w,h) {
        var left = (screen.width/2)-(w/2);
        var top = (screen.height/2)-(h/2);
        var targetWin = window.open(
          pageURL,
          title,
          'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width='+w+', height='+h+', top='+top+', left='+left
          );
      }

    var SocketProxy = function() {

		var findPartner = function(mySessionId) {
			socket.emit('message', {
				event: 'next',
				data: {
					sessionId: mySessionId
				}
			});
		};

		return {
			findPartner: findPartner
		};
	}();

	var RouletteApp = function() {

		var apiKey = 413302;

		var mySession;
		var partnerSession;

		var partnerConnection;

		// Get view elements
		var ele = {};

		TB.setLogLevel(TB.DEBUG);

		var init = function(sessionId, token) {
            console.log("-------------------> INIT <-------------------------");
            
            console.log("sessionId");
            console.log(sessionId);
            console.log("token");
            console.log(token);
			ele.publisherContainer = document.getElementById('publisherContainer');
			ele.subscriberContainer = document.getElementById('subscriberContainer');
			ele.notificationContainer = document.getElementById('notificationContainer');
			ele.nextButton = document.getElementById('nextButton');

			ele.notificationContainer.innerHTML = "Connecting...";

			ele.nextButton.onclick = function() {
                RouletteApp.next();
			};
            console.log(ele);

			mySession = TB.initSession(sessionId);
			mySession.addEventListener('sessionConnected', sessionConnectedHandler);
			mySession.addEventListener('connectionCreated', connectionCreatedHandler);
			mySession.addEventListener('connectionDestroyed', connectionDestroyedHandler);
			mySession.connect(apiKey, 'moderator_token');

			function sessionConnectedHandler(event) {
				ele.notificationContainer.innerHTML = "Connected, press allow.";

				var div = document.createElement('div');
				div.setAttribute('id', 'publisher');
				ele.publisherContainer.appendChild(div);

				var publisher = mySession.publish(div.id);
				publisher.addEventListener('accessAllowed', accessAllowedHandler);
			};

			function accessAllowedHandler(event) {
				SocketProxy.findPartner(mySession.sessionId);
			};

			function connectionCreatedHandler(event) {
				partnerConnection = event.connections[0];
			};

			function connectionDestroyedHandler(event) {
				partnerConnection = null;
			}
		};

		var next = function() {
			if (partnerConnection) {
				mySession.forceDisconnect(partnerConnection);
			}

			if (partnerSession) {
				partnerSession.disconnect();
			}
		};

		var subscribe = function(sessionId, token) {
			ele.notificationContainer.innerHTML = "Have fun !!!!";

			partnerSession = TB.initSession(sessionId);

			partnerSession.addEventListener('sessionConnected', sessionConnectedHandler);
			partnerSession.addEventListener('sessionDisconnected', sessionDisconnectedHandler);
			partnerSession.addEventListener('streamDestroyed', streamDestroyedHandler);

			partnerSession.connect(apiKey, token);

			function sessionConnectedHandler(event) {
				console.log(event);

				var div = document.createElement('div');
				div.setAttribute('id', 'subscriber');
				ele.subscriberContainer.appendChild(div);

				partnerSession.subscribe(event.streams[0], div.id);

				console.log('Subscribe to my new partner ' + event.streams[0].streamId);
			}

			function sessionDisconnectedHandler(event) {
				partnerSession.removeEventListener('sessionConnected', sessionConnectedHandler);
				partnerSession.removeEventListener('sessionDisconnected', sessionDisconnectedHandler);
				partnerSession.removeEventListener('streamDestroyed', streamDestroyedHandler);

				SocketProxy.findPartner(mySession.sessionId);
				partnerSession = null;
			}

			function streamDestroyedHandler(event) {
				partnerSession.disconnect();
			}
		};

		var wait = function() {
			ele.notificationContainer.innerHTML = "Nobody to talk to :(.  When someone comes, you'll be the first to know :).";
		};

		return {
			init: init,
			next: next,
			subscribe: subscribe,
			wait: wait
		};

	}();



      // open a socket.io connection to the backend
      var socket = io.connect();

      socket.on('connect', function() {

        // identify this socket with our auth token
        socket.emit('auth', '<%= socket_id %>');
        socket.emit('message', { event: 'initial' });

	socket.on('message', function (message) {
		var sessionId;
		var token;
        console.log("-----------------------> NEW MESSAGE <--------------------------");
        console.log(message);
		switch(message.event) {
			case 'initial':
				sessionId = message.data.sessionId;
				token = message.data.token;
				RouletteApp.init(sessionId, token);
                console.log(message.data);
			    break;

			case 'subscribe':
				sessionId = message.data.sessionId;
				token = message.data.token;
				RouletteApp.subscribe(sessionId, token);
			    break;
			    
			case 'chatStatus':
				switch (message.data.status){
				case 'online':
					$("#chat").toggle(true);
				break;
				case 'offline':
					$("#chat").toggle(false);
				break;
					
				
				}
			
			case 'chatMessage':
				$('#chatContainer').append('<div class="chatMessage" id="chat_message_'+chatMessageCounter+'"></div>');
				$('#chat_message_'+chatMessageCounter).text(message.data.chatMsg);
				chatMessageCounter++;
                break;
                
            case 'chatEmbed':
    			$('#chatContainer').append('<div class="chatMessage" id="chat_message_'+chatMessageCounter+'"></div>');
				$('#chat_message_'+chatMessageCounter).text(message.data.chatMsg);
                $('#chat_message_'+chatMessageCounter).append(message.data.html);
				chatMessageCounter++;    
                break;
                
			case 'empty':
				RouletteApp.wait();
                //alert to check if persons are being added to solo list
			    break;
		}
	});

	socket.on('debug', function(value) {
		    console.log("--------------------------------------------------------------------------- DEBUG ------------------------------------------");
            console.log( value);
            console.log("--------------------------------------------------------------------------- DEBUG ------------------------------------------");
        });


		// Num of likes in db
		socket.on('likes_num', function(result) {
		  console.log(result);
          $('ul#likes_list').append('                                                                         \
            <li>' + result.ip + '</li>                                                                       \
          ');
        });


        // when a friend is received from the backend, add it to the page
        socket.on('friend', function(friend) {
          $('ul#friends').append('                                                                         \
            <li>                                                                                           \
              <a href="#" onclick="window.open(\'http://www.facebook.com/' + friend.id + '\');">           \
                <img src="https://graph.facebook.com/' + friend.id + '/picture" alt="' + friend.name + '"> \
                ' + friend.name + '                                                                        \
              </a>                                                                                         \
            </li>                                                                                          \
          ');
        });

        // when a photo is received from the backend, add it to the page
        socket.on('photo', function(photo) {
          $('ul#photos').append('                                     \
            <li style="background-image: url(' + photo.picture + ')"> \
              <a href="#" onclick="window.open(\'http://www.facebook.com/' + photo.id + '\');">     \
              ' + photo.name + '                                      \
              </a>                                                    \
            </li>                                                     \
          ');

          $('ul#photos li:nth-child(4n+1)').addClass('first-column');
        });

        // when a like is received from the backend, add it to the page
        socket.on('like', function(like) {
          $('ul#likes').append('                                   \
            <li>                                                   \
              <a href="http://www.facebook.com/' + like.id + '">   \
                <img src="https://graph.facebook.com/' + like.id +
                '/picture?type=square" alt="' + like.name + '">    \
                ' + like.name + '                                  \
              </a>                                                 \
            </li>                                                  \
          ');
        });

        // when a friend is received from the backend, add it to the page
        socket.on('friend_using_app', function(friend) {
          $('ul#friends_using_app').append('                                                    \
            <li>                                                                                \
              <a href="" onclick="window.open(\'http://www.facebook.com/' + friend.uid + '\');"> \
                <img src="' + friend.pic_square + '" alt="' + friend.name + '">                 \
                ' + friend.name + '                                                             \
              </a>                                                                              \
            </li>                                                                               \
          ');
        });

      //Fecho socket.on('connect',function)
      });
      
      $(document).ready(function () {
    	  $("input[name='chatSendButton']").click(function () {
			
    		  var chatContent = $(".chatInput").val();
    		  var chatMsgId = "chat_message_"+chatMessageCounter;
    		  $('#chatContainer').append('<div class="chatMessage_sending" id="'+chatMsgId+'"></div>');
    		  $("#"+chatMsgId).text(chatContent);
    		  socket.emit('message', {
				event: 'chatMessage',
				data: {
					chatMsg: chatContent
				}
			}, function(data){
				//callback function
				//TODO use the callback data and do different stuff with it
				$("#"+chatMsgId).removeClass('chatMessage_sending').addClass('chatMessage');
			});
            
            //verificar se tem http e o preview aqui caso tenha.
            
            
		 	chatMessageCounter++;
			$(".chatInput").val("");
    	  });
      });
      
      

    </script>
    <!--[if IE]>
      <script>
        var tags = ['header', 'section'];
        while(tags.length)
          document.createElement(tags.pop());
      </script>
    <![endif]-->
  </head>
  <body>
	<div id="streams">
		<div id="publisherContainer"></div>
		<div id="subscriberContainer"></div>
	</div>

	<div id="controls">
		<div id="notificationContainer"></div>
		<input type="button" id="nextButton" value="Next"/>
	</div>
	
	<div id="chat" class="chat">
		<div id="chatContainer">
		</div>
		<textarea class="chatInput" name="chatInput">
		</textarea>
		<input name="chatSendButton" type="button" value="Send"/>
	</div>

    <header class="clearfix">
      <!-- By passing a valid access token here, we are able to display -->
      <!-- the user's images without having to download or prepare -->
      <!-- them ahead of time -->
      <p id="picture" style="background-image: url(https://graph.facebook.com/me/picture?type=normal&access_token=<%= token %>)"></p>
      <div>
        <h1>Welcome, <strong><%= user.name %></strong></h1>
        <p class="tagline">
          This is your app
          <a href="<%= app.link %>"><%= app.name %></a>
        </p>
        <div id="share-app">
          <p>Share your app:</p>
          <ul>
            <li>
              <a href="#" class="facebook-button" onclick="popup('http://www.facebook.com/dialog/feed?redirect_uri=<%= redirect %>&display=popup&app_id=<%= app.id %>', 'Post to Wall', 580, 400);">
                <span class="plus">Post to Wall</span>
              </a>
            </li>
            <li>
            <a href="#" class="facebook-button speech-bubble" onclick="popup('https://www.facebook.com/dialog/send?redirect_uri=<%= redirect %>&display=popup&app_id=<%= app.id %>&link=<%= home %>', 'Send', 580, 400);">
                <span class="speech-bubble">Send to Friends</span>
              </a>
            </li>
          </ul>
        </div>
      </div>
    </header>
    <section id="get-started">
      <p>Welcome to your Facebook app, running on <span>heroku</span>!</p>
      <a href="http://devcenter.heroku.com/articles/facebook" class="button">Learn How to Edit This App</a>
    </section>

    <section id="samples" class="clearfix">
      <h1>Examples of the Facebook Graph API</h1>

      <div class="list">
        <h3>A few of your friends</h3>
        <ul id="friends"></ul>
      </div>

      <div class="list inline">
        <h3>Recent photos</h3>
        <ul id="photos"></ul>
      </div>

      <div class="list">
        <h3>Things you like</h3>
        <ul id="likes"></ul>
      </div>

      <div class="list">
        <h3>Friends using this app</h3>
        <ul id="friends_using_app"></ul>
      </div>
    </section>

    <section id="guides" class="clearfix">
      <h1>Learn More About Heroku &amp; Facebook Apps</h1>
      <ul>
        <li>
          <a href="http://www.heroku.com/" class="icon heroku">Heroku</a>
          <p>Learn more about <a href="http://www.heroku.com/">Heroku</a>, or read developer docs in the Heroku <a href="http://devcenter.heroku.com/">Dev Center</a>.</p>
        </li>
        <li>
          <a href="http://developers.facebook.com/docs/guides/web/" class="icon websites">Websites</a>
          <p>
            Drive growth and engagement on your site with
            Facebook Login and Social Plugins.
          </p>
        </li>
        <li>
          <a href="http://developers.facebook.com/docs/guides/mobile/" class="icon mobile-apps">Mobile Apps</a>
          <p>
            Integrate with our core experience by building apps
            that operate within Facebook.
          </p>
        </li>
        <li>
          <a href="http://developers.facebook.com/docs/guides/canvas/" class="icon apps-on-facebook">Apps on Facebook</a>
          <p>Let users find and connect to their friends in mobile apps and games.</p>
        </li>
      </ul>
    </section>
  </body>
</html>
